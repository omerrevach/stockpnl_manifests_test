apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: frontend-ingress
  namespace: default
  annotations:
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    alb.ingress.kubernetes.io/load-balancer-name: stockpnl-alb
    alb.ingress.kubernetes.io/group.name: stockpnl
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}]'
spec:
  ingressClassName: alb
  rules:
    - http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: frontend-service
                port:
                  number: 80



# # IngressClass definition
# apiVersion: networking.k8s.io/v1
# kind: IngressClass
# metadata:
#   name: alb
#   annotations:
#     ingressclass.kubernetes.io/is-default-class: "true"
# spec:
#   controller: ingress.k8s.aws/alb
# ---
# # Ingress resource
# apiVersion: networking.k8s.io/v1
# kind: Ingress
# metadata:
#   name: frontend-ingress
#   namespace: default
#   annotations:
#     kubernetes.io/ingress.class: alb
#     alb.ingress.kubernetes.io/scheme: internet-facing
#     alb.ingress.kubernetes.io/target-type: ip
#     alb.ingress.kubernetes.io/certificate-arn: arn:aws:acm:eu-north-1:590183919160:certificate/3f05f383-36e1-4b11-8520-c51a378d9631
#     alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS": 443}]'
#     alb.ingress.kubernetes.io/backend-protocol: HTTP
#     alb.ingress.kubernetes.io/ssl-redirect: '443'
# spec:
#   rules:
#     - host: stockpnl.com
#       http:
#         paths:
#           - path: /
#             pathType: Prefix
#             backend:
#               service:
#                 name: frontend-service
#                 port:
#                   number: 80